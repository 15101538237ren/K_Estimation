clear;
clc;
close all;
K_1_PATH = '../DATA/Repli_BS/K_RATES/1/chr1.mat';%'DATA/k1_chr1.mat';
load(K_1_PATH);
NTot=size(FitSites, 2); %total number of sites in dataset
NSites=60000; %number of sites to simulate

rs = RandStream('mlfg6331_64');%Create the random number stream for reproducibility.

ChooseSites=datasample(rs, 1 : NTot, NSites, 'Replace',false);
fs=MLEFrac(ChooseSites,1); %assigning f values
ks=MLELam(ChooseSites ,1); %assigning k values

ts=[0.5,1.5,4.5,16.5];
N_Times= numel(ts);
for ii=1: N_Times
Ps(ii,:)=fs.*(1-exp(-ks*ts(ii))); %probability array 
end


MERGED_CHR1_DATA_PATH = '../DATA/Repli_BS/TMP/MERGED_DATA/chr1.mat';
load(MERGED_CHR1_DATA_PATH, 'AllDat', 'sites'); % All merged chr1 sites, without Fitting, therefore, to sample the reads from the fitted sites, we have to extract the fitted sites and sample from them.
[olps, ia, ib] = intersect(FitSites, sites); % !!!!!!!!This probably not appropriate.
Fitted_dat_with_reads_info = sum(AllDat(ib, :, 1:2), 3);

%set the number of reads per site per timepoint. Possibly change this to
%sampling from true read depths
Tot_Size = size(Fitted_dat_with_reads_info, 1);
sampled_idxs = datasample(rs, 1 : Tot_Size, NSites, 'Replace',false);
Sampled_data_with_reads_info = Fitted_dat_with_reads_info(sampled_idxs , :);


MethReads_rep1 = zeros(NSites, N_Times);
MethReads_rep2 = zeros(NSites, N_Times);

UMethReads_rep1 = zeros(NSites, N_Times);
UMethReads_rep2 = zeros(NSites, N_Times);
p = 0.5; %probability of binomial distribution
%Computing the Read data by probability
for ii=1 : NSites
    for jj=1 : N_Times
        Numreads = Sampled_data_with_reads_info(ii,jj);
        MReads=sum(double(rand(Numreads, 1) < Ps(jj,ii)));
        UReads=Numreads-MReads;
        M
        MethReads(ii,jj)=binornd(MReads, p);
        UMethReads=;
    end
end

Times=[0.5,1.5,4.5,16.5];
%next: load MReads and UMethReads into AllDat